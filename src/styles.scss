
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rexcoders-portal-primary: mat.define-palette(mat.$indigo-palette);
$rexcoders-portal-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$rexcoders-portal-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rexcoders-portal-theme: mat.define-light-theme((
  color: (
    primary: $rexcoders-portal-primary,
    accent: $rexcoders-portal-accent,
    warn: $rexcoders-portal-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($rexcoders-portal-theme);

/* You can add global styles to this file, and also import other style files */
// @import url('./assets/css/style.css');
@import url('./assets/css/plugins/bootstrap.min.css');

@import url('./assets/css/style.css');
$primary-color: #03b97c;

/* Importing Bootstrap SCSS file. */


.swal2-confirm {
    background-color: $primary-color !important;
}

.collapse-off-sidebar {
    position: fixed;
    top: 0;
    z-index: 15;
    align-items: center;
    margin-left: 0px;
    transition: 0.9s;
}

.ck.ck-editor__editable.ck-focused:not(.ck-editor__nested-editable) {
    border: 1px solid $primary-color !important;
    box-shadow: var(--ck-inner-shadow), 0 0 !important;
    outline: none !important;
}



// toggle-switch
.toggle-switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 25px;
    color: $primary-color;

    input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 18px;
        width: 18px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked+.slider {
        background-color: #2196F3;
    }

    input:focus+.slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked+.slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    .custom-control-input:focus~.custom-control-label::before {
        border-color: red !important;
        box-shadow: 0 0 0 0.2rem rgba(255, 47, 69, 0.25) !important;
    }

    .change-color:checked~.round {
        border-color: $primary-color;
        background-color: $primary-color;
    }


    .slider.round {
        border-radius: 34px;
    }

    .slider.round:before {
        border-radius: 50%;
    }

}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
